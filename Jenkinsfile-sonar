pipeline {
    agent any

    environment {
        // Define the SonarQube environment, assuming 'sq1' is the configuration name in Jenkins
        SONARQUBE_ENV = 'sq1'
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Checkout your code from a source control management system (e.g., Git)
                checkout scm
            }
        }

        stage('SonarQube Scan Python Service') {
            steps {
                dir('service1') {
                    withSonarQubeEnv(env.SONARQUBE_ENV) {
                        // Running SonarQube scan for the Python service
                        sh "sonar-scanner -Dsonar.projectKey=gi-service1"
                    }
                }
            }
        }

        stage('SonarQube Scan Go Service') {
            steps {
                dir('service2') {
                    withSonarQubeEnv(env.SONARQUBE_ENV) {
                        // Running SonarQube scan for the Go service
                        sh "sonar-scanner -Dsonar.projectKey=gi-service2"
                    }
                }
            }
        }

        stage('SonarQube Scan Node.js Frontend') {
            steps {
                dir('frontend') {
                    withSonarQubeEnv(env.SONARQUBE_ENV) {
                        // Running SonarQube scan for the Node.js service
                        sh "sonar-scanner -Dsonar.projectKey=gi-frontend"
                    }
                }
            }
        }

        // Add other stages as necessary (e.g., Build, Test, Deploy)
    }
}
