pipeline {
    agent any

    stages {
        stage('List Directory Structure') {
            steps {
                dir('frontend') {
                    sh 'ls -la'
                }
            }
        }
        
        stage('SonarQube Scan for Frontend') {
            agent {
                docker {
                    image 'node:lts-alpine'  // Use a Node.js image with npm installed
                    args '-v $HOME/.sonar:/root/.sonar'  // Mount SonarQube configuration directory
                }
            }
            steps {
                dir('frontend') {
                    withSonarQubeEnv('sq1') {
                        // Install SonarQube scanner
                        sh 'npm install -g sonarqube-scanner'
                        
                        // Run SonarQube scanner
                        sh 'sonar-scanner -Dsonar.projectKey=gi-frontend'
                    }
                }
            }
        }
        
        // Add additional stages as necessary
    }
    
    post {
        failure {
            // Handle failure scenario, e.g., sending notifications
            echo 'The build failed.'
        }
        success {
            // Handle success scenario
            echo 'The build succeeded.'
        }
    }
}
