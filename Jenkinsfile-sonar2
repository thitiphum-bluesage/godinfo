pipeline {
    agent any

    stages {
        stage('List Directory Structure') {
            steps {
                dir('frontend') {
                    sh 'ls -la'
                }
            }
        }
        
        stage('SonarQube Scan for Frontend') {
            steps {
                script {
                    docker.image('node:lts-alpine').inside('-v $HOME/.sonar:/root/.sonar') {
                        dir('frontend') {
                            withSonarQubeEnv('sq1') {
                                // Ensuring npm is available and installing sonar-scanner
                                sh 'npm install -g sonar-scanner'
                                // Use sonar-scanner command directly
                                sh 'sonar-scanner -Dsonar.projectKey=gi-frontend -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN'
                            }
                        }
                    }
                }
            }
        }
        
        // Additional stages if necessary
    }
    
    post {
        failure {
            // Handle failure scenario
            echo 'The build failed.'
        }
        success {
            // Handle success scenario
            echo 'The build succeeded.'
        }
    }
}
